{
  "manifest": {
    "name": "apollo-server-caching",
    "version": "0.5.1",
    "author": {
      "name": "opensource@apollographql.com"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/apollographql/apollo-server/tree/master/packages/apollo-server-caching"
    },
    "homepage": "https://github.com/apollographql/apollo-server#readme",
    "bugs": {
      "url": "https://github.com/apollographql/apollo-server/issues"
    },
    "main": "dist/index.js",
    "types": "dist/index.d.ts",
    "engines": {
      "node": ">=6"
    },
    "dependencies": {
      "lru-cache": "^5.0.0"
    },
    "gitHead": "0743d6b2f1737758cf09e80d2086917772bc00c9",
    "_registry": "npm",
    "_loc": "/home/tel/.cache/yarn/v6/npm-apollo-server-caching-0.5.1-5cd0536ad5473abb667cc82b59bc56b96fb35db6-integrity/node_modules/apollo-server-caching/package.json",
    "readmeFilename": "README.md",
    "readme": "# apollo-server-caching\n\n[![npm version](https://badge.fury.io/js/apollo-server-caching.svg)](https://badge.fury.io/js/apollo-server-caching)\n[![Build Status](https://circleci.com/gh/apollographql/apollo-server.svg?style=svg)](https://circleci.com/gh/apollographql/apollo-server)\n\n## Implementing your own Cache\n\nInternally, Apollo Server uses the `KeyValueCache` interface to provide a caching store for the Data Sources. An in-memory LRU cache is used by default, and we provide connectors for [Memcached](../apollo-server-cache-memcached)/[Redis](../apollo-server-cache-redis) backends.\n\nBuilt with extensibility in mind, you can also implement your own cache to use with Apollo Server, in a way that best suits your application needs. It needs to implement the following interface that can be exported from `apollo-server-caching`:\n\n```typescript\nexport interface KeyValueCache {\n  get(key: string): Promise<string | undefined>;\n  set(key: string, value: string, options?: { ttl?: number }): Promise<void>;\n}\n```\n\n> The `ttl` value for the `set` method's `options` is specified in __seconds__.\n\n## Testing cache implementations\n\n### Test helpers\n\nYou can export and run a jest test suite from `apollo-server-caching` to test your implementation:\n\n```typescript\n// ../__tests__/YourKeyValueCache.test.ts\n\nimport YourKeyValueCache from '../src/YourKeyValueCache';\nimport { testKeyValueCache } from 'apollo-server-caching';\ntestKeyValueCache(new MemcachedCache('localhost'));\n```\n\nThe default `testKeyValueCache` helper will run all key-value store tests on the specified store, including basic `get` and `set` functionality, along with time-based expunging rules.\n\nSome key-value cache implementations may not be able to support the full suite of tests (for example, some tests might not be able to expire based on time).  For those cases, there are more granular implementations which can be used:\n\n* `testKeyValueCache_Basic`\n* `testKeyValueCache_Expiration`\n\nFor more details, consult the [source for `apollo-server-caching`](./src/__tests__/testsuite.ts).\n\n### Running tests\n\nRun tests with `jest --verbose`\n",
    "description": "[![npm version](https://badge.fury.io/js/apollo-server-caching.svg)](https://badge.fury.io/js/apollo-server-caching) [![Build Status](https://circleci.com/gh/apollographql/apollo-server.svg?style=svg)](https://circleci.com/gh/apollographql/apollo-server)",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016-2020 Meteor Development Group, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/apollo-server-caching/-/apollo-server-caching-0.5.1.tgz#5cd0536ad5473abb667cc82b59bc56b96fb35db6",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/apollo-server-caching/-/apollo-server-caching-0.5.1.tgz",
    "hash": "5cd0536ad5473abb667cc82b59bc56b96fb35db6",
    "integrity": "sha512-L7LHZ3k9Ao5OSf2WStvQhxdsNVplRQi7kCAPfqf9Z3GBEnQ2uaL0EgO0hSmtVHfXTbk5CTRziMT1Pe87bXrFIw==",
    "registry": "npm",
    "packageName": "apollo-server-caching",
    "cacheIntegrity": "sha512-L7LHZ3k9Ao5OSf2WStvQhxdsNVplRQi7kCAPfqf9Z3GBEnQ2uaL0EgO0hSmtVHfXTbk5CTRziMT1Pe87bXrFIw== sha1-XNBTatVHOrtmfMgrWbxWuW+zXbY="
  },
  "registry": "npm",
  "hash": "5cd0536ad5473abb667cc82b59bc56b96fb35db6"
}