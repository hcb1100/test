{
  "manifest": {
    "name": "javascript-stringify",
    "version": "1.6.0",
    "description": "Stringify is to `eval` as `JSON.stringify` is to `JSON.parse`",
    "main": "javascript-stringify.js",
    "typings": "javascript-stringify.d.ts",
    "files": [
      "javascript-stringify.js",
      "javascript-stringify.d.ts"
    ],
    "scripts": {
      "test": "istanbul cover node_modules/mocha/bin/_mocha -- -R spec"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/blakeembrey/javascript-stringify.git"
    },
    "keywords": [
      "stringify",
      "javascript",
      "object",
      "string"
    ],
    "author": {
      "name": "Blake Embrey",
      "email": "hello@blakeembrey.com",
      "url": "http://blakeembrey.me"
    },
    "license": "MIT",
    "readmeFilename": "README.md",
    "devDependencies": {
      "chai": "^1.9.1",
      "istanbul": "^0.3.0",
      "mocha": "^1.21.3"
    },
    "_registry": "npm",
    "_loc": "/home/tel/.cache/yarn/v6/npm-javascript-stringify-1.6.0-142d111f3a6e3dae8f4a9afd77d45855b5a9cce3-integrity/node_modules/javascript-stringify/package.json",
    "readme": "# JavaScript Stringify\n\n[![NPM version][npm-image]][npm-url]\n[![NPM downloads][downloads-image]][downloads-url]\n[![Build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n\n> Stringify is to `eval` as `JSON.stringify` is to `JSON.parse`.\n\n## Installation\n\n```javascript\nnpm install javascript-stringify --save\nbower install javascript-stringify --save\n```\n\n### Node\n\n```javascript\nvar javascriptStringify = require('javascript-stringify');\n```\n\n### AMD\n\n```javascript\ndefine(function (require, exports, module) {\n  var javascriptStringify = require('javascript-stringify');\n});\n```\n\n### `<script>` tag\n\n```html\n<script src=\"javascript-stringify.js\"></script>\n```\n\n## Usage\n\n```javascript\njavascriptStringify(value[, replacer [, space [, options]]])\n```\n\nThe API is similar to `JSON.stringify`. However, any value returned by the replacer will be used literally. For this reason, the replacer is passed three arguments - `value`, `indentation` and `stringify`. If you need to continue the stringification process inside your replacer, you can call `stringify(value)` with the new value.\n\nThe `options` object allows some additional configuration:\n\n* **maxDepth** _(number, default: 100)_ The maximum depth of values to stringify\n* **maxValues** _(number, default: 100000)_ The maximum number of values to stringify\n* **references** _(boolean, default: false)_ Restore circular/repeated references in the object (uses IIFE)\n* **skipUndefinedProperties** _(boolean, default: false)_ Omits `undefined` properties instead of restoring as `undefined`\n\n### Examples\n\n```javascript\njavascriptStringify({});    // \"{}\"\njavascriptStringify(true);  // \"true\"\njavascriptStringify('foo'); // \"'foo'\"\n\njavascriptStringify({ x: 5, y: 6});       // \"{x:5,y:6}\"\njavascriptStringify([1, 2, 3, 'string']); // \"[1,2,3,'string']\"\n\njavascriptStringify({ a: { b: { c: 1 } } }, null, null, { maxDepth: 2 }); // \"{a:{b:{}}}\"\n\n/**\n * Invalid key names are automatically stringified.\n */\n\njavascriptStringify({ 'some-key': 10 }); // \"{'some-key':10}\"\n\n/**\n * Some object types and values can remain identical.\n */\n\njavascriptStringify([/.+/ig, new Number(10), new Date()]); // \"[/.+/gi,new Number(10),new Date(1406623295732)]\"\n\n/**\n * Unknown or circular references are removed.\n */\n\nvar obj = { x: 10 };\nobj.circular = obj;\n\njavascriptStringify(obj); // \"{x:10}\"\njavascriptStringify(obj, null, null, { references: true }); // \"(function(){var x={x:10};x.circular=x;return x;}())\"\n\n/**\n * Specify indentation - just like `JSON.stringify`.\n */\n\njavascriptStringify({ a: 2 }, null, ' ');             // \"{\\n a: 2\\n}\"\njavascriptStringify({ uno: 1, dos : 2 }, null, '\\t'); // \"{\\n\\tuno: 1,\\n\\tdos: 2\\n}\"\n\n/**\n * Add custom replacer behaviour - like double quoted strings.\n */\n\njavascriptStringify(['test', 'string'], function (value, indent, stringify) {\n  if (typeof value === 'string') {\n    return '\"' + value.replace(/\"/g, '\\\\\"') + '\"';\n  }\n\n  return stringify(value);\n});\n//=> '[\"test\",\"string\"]'\n```\n\n## License\n\nMIT\n\n[npm-image]: https://img.shields.io/npm/v/javascript-stringify.svg?style=flat\n[npm-url]: https://npmjs.org/package/javascript-stringify\n[downloads-image]: https://img.shields.io/npm/dm/javascript-stringify.svg?style=flat\n[downloads-url]: https://npmjs.org/package/javascript-stringify\n[travis-image]: https://img.shields.io/travis/blakeembrey/javascript-stringify.svg?style=flat\n[travis-url]: https://travis-ci.org/blakeembrey/javascript-stringify\n[coveralls-image]: https://img.shields.io/coveralls/blakeembrey/javascript-stringify.svg?style=flat\n[coveralls-url]: https://coveralls.io/r/blakeembrey/javascript-stringify?branch=master\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2013 Blake Embrey (hello@blakeembrey.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/javascript-stringify/-/javascript-stringify-1.6.0.tgz#142d111f3a6e3dae8f4a9afd77d45855b5a9cce3",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/javascript-stringify/-/javascript-stringify-1.6.0.tgz",
    "hash": "142d111f3a6e3dae8f4a9afd77d45855b5a9cce3",
    "integrity": "sha1-FC0RHzpuPa6PSpr9d9RYVbWpzOM=",
    "registry": "npm",
    "packageName": "javascript-stringify",
    "cacheIntegrity": "sha512-fnjC0up+0SjEJtgmmG+teeel68kutkvzfctO/KxE3qJlbunkJYAshgH3boU++gSBHP8z5/r0ts0qRIrHf0RTQQ== sha1-FC0RHzpuPa6PSpr9d9RYVbWpzOM="
  },
  "registry": "npm",
  "hash": "142d111f3a6e3dae8f4a9afd77d45855b5a9cce3"
}