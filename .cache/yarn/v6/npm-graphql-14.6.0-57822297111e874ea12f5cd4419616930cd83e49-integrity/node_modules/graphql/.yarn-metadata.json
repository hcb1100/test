{
  "manifest": {
    "name": "graphql",
    "version": "14.6.0",
    "description": "A Query Language and Runtime which can target any service.",
    "license": "MIT",
    "main": "index",
    "module": "index.mjs",
    "types": "index.d.ts",
    "sideEffects": false,
    "homepage": "https://github.com/graphql/graphql-js",
    "bugs": {
      "url": "https://github.com/graphql/graphql-js/issues"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/graphql/graphql-js.git"
    },
    "keywords": [
      "graphql",
      "graphql-js"
    ],
    "engines": {
      "node": ">= 6.x"
    },
    "dependencies": {
      "iterall": "^1.2.2"
    },
    "_registry": "npm",
    "_loc": "/home/tel/.cache/yarn/v6/npm-graphql-14.6.0-57822297111e874ea12f5cd4419616930cd83e49-integrity/node_modules/graphql/package.json",
    "readmeFilename": "README.md",
    "readme": "# GraphQL.js\n\nThe JavaScript reference implementation for GraphQL, a query language for APIs created by Facebook.\n\n[![npm version](https://badge.fury.io/js/graphql.svg)](https://badge.fury.io/js/graphql)\n[![Build Status](https://travis-ci.org/graphql/graphql-js.svg?branch=master)](https://travis-ci.org/graphql/graphql-js?branch=master)\n[![Coverage Status](https://codecov.io/gh/graphql/graphql-js/branch/master/graph/badge.svg)](https://codecov.io/gh/graphql/graphql-js)\n\nSee more complete documentation at https://graphql.org/ and\nhttps://graphql.org/graphql-js/.\n\nLooking for help? Find resources [from the community](https://graphql.org/community/).\n\n## Getting Started\n\nAn overview of GraphQL in general is available in the\n[README](https://github.com/graphql/graphql-spec/blob/master/README.md) for the\n[Specification for GraphQL](https://github.com/graphql/graphql-spec). That overview\ndescribes a simple set of GraphQL examples that exist as [tests](src/__tests__)\nin this repository. A good way to get started with this repository is to walk\nthrough that README and the corresponding tests in parallel.\n\n### Using GraphQL.js\n\nInstall GraphQL.js from npm\n\nWith yarn:\n\n```sh\nyarn add graphql\n```\n\nor alternatively using npm:\n\n```sh\nnpm install --save graphql\n```\n\nGraphQL.js provides two important capabilities: building a type schema, and\nserving queries against that type schema.\n\nFirst, build a GraphQL type schema which maps to your code base.\n\n```js\nimport {\n  graphql,\n  GraphQLSchema,\n  GraphQLObjectType,\n  GraphQLString,\n} from 'graphql';\n\nvar schema = new GraphQLSchema({\n  query: new GraphQLObjectType({\n    name: 'RootQueryType',\n    fields: {\n      hello: {\n        type: GraphQLString,\n        resolve() {\n          return 'world';\n        },\n      },\n    },\n  }),\n});\n```\n\nThis defines a simple schema with one type and one field, that resolves\nto a fixed value. The `resolve` function can return a value, a promise,\nor an array of promises. A more complex example is included in the top\nlevel [tests](src/__tests__) directory.\n\nThen, serve the result of a query against that type schema.\n\n```js\nvar query = '{ hello }';\n\ngraphql(schema, query).then(result => {\n  // Prints\n  // {\n  //   data: { hello: \"world\" }\n  // }\n  console.log(result);\n});\n```\n\nThis runs a query fetching the one field defined. The `graphql` function will\nfirst ensure the query is syntactically and semantically valid before executing\nit, reporting errors otherwise.\n\n```js\nvar query = '{ boyhowdy }';\n\ngraphql(schema, query).then(result => {\n  // Prints\n  // {\n  //   errors: [\n  //     { message: 'Cannot query field boyhowdy on RootQueryType',\n  //       locations: [ { line: 1, column: 3 } ] }\n  //   ]\n  // }\n  console.log(result);\n});\n```\n\n### Want to ride the bleeding edge?\n\nThe `npm` branch in this repository is automatically maintained to be the last\ncommit to `master` to pass all tests, in the same form found on npm. It is\nrecommended to use builds deployed to npm for many reasons, but if you want to use\nthe latest not-yet-released version of graphql-js, you can do so by depending\ndirectly on this branch:\n\n```\nnpm install graphql@git://github.com/graphql/graphql-js.git#npm\n```\n\n### Using in a Browser\n\nGraphQL.js is a general purpose library and can be used both in a Node server\nand in the browser. As an example, the [GraphiQL](https://github.com/graphql/graphiql/)\ntool is built with GraphQL.js!\n\nBuilding a project using GraphQL.js with [webpack](https://webpack.js.org) or\n[rollup](https://github.com/rollup/rollup) should just work and only include\nthe portions of the library you use. This works because GraphQL.js is distributed\nwith both CommonJS (`require()`) and ESModule (`import`) files. Ensure that any\ncustom build configurations look for `.mjs` files!\n\n### Contributing\n\nWe actively welcome pull requests, learn how to\n[contribute](https://github.com/graphql/graphql-js/blob/master/.github/CONTRIBUTING.md).\n\n### Changelog\n\nChanges are tracked as [GitHub releases](https://github.com/graphql/graphql-js/releases).\n\n### License\n\nGraphQL.js is [MIT-licensed](https://github.com/graphql/graphql-js/blob/master/LICENSE).\n",
    "licenseText": "MIT License\n\nCopyright (c) 2019 GraphQL Contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/graphql/-/graphql-14.6.0.tgz#57822297111e874ea12f5cd4419616930cd83e49",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/graphql/-/graphql-14.6.0.tgz",
    "hash": "57822297111e874ea12f5cd4419616930cd83e49",
    "integrity": "sha512-VKzfvHEKybTKjQVpTFrA5yUq2S9ihcZvfJAtsDBBCuV6wauPu1xl/f9ehgVf0FcEJJs4vz6ysb/ZMkGigQZseg==",
    "registry": "npm",
    "packageName": "graphql",
    "cacheIntegrity": "sha512-VKzfvHEKybTKjQVpTFrA5yUq2S9ihcZvfJAtsDBBCuV6wauPu1xl/f9ehgVf0FcEJJs4vz6ysb/ZMkGigQZseg== sha1-V4IilxEeh06hL1zUQZYWkwzYPkk="
  },
  "registry": "npm",
  "hash": "57822297111e874ea12f5cd4419616930cd83e49"
}