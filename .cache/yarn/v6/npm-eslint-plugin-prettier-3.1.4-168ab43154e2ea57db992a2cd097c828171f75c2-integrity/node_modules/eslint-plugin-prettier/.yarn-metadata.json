{
  "manifest": {
    "name": "eslint-plugin-prettier",
    "version": "3.1.4",
    "description": "Runs prettier as an eslint rule",
    "keywords": [
      "eslint",
      "eslintplugin",
      "eslint-plugin",
      "prettier"
    ],
    "author": {
      "name": "Teddy Katz"
    },
    "files": [
      "eslint-plugin-prettier.js"
    ],
    "main": "eslint-plugin-prettier.js",
    "scripts": {
      "lint": "eslint .",
      "test": "npm run lint && mocha",
      "format": "yarn run prettier '**/*.{js,json,md,yml}' --write && yarn run lint --fix",
      "generate-release": "node-release-script"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/prettier/eslint-plugin-prettier.git"
    },
    "bugs": {
      "url": "https://github.com/prettier/eslint-plugin-prettier/issues"
    },
    "homepage": "https://github.com/prettier/eslint-plugin-prettier#readme",
    "dependencies": {
      "prettier-linter-helpers": "^1.0.0"
    },
    "peerDependencies": {
      "eslint": ">=5.0.0",
      "prettier": ">=1.13.0"
    },
    "devDependencies": {
      "@not-an-aardvark/node-release-script": "^0.1.0",
      "eslint": "^7.0.0",
      "eslint-config-not-an-aardvark": "^2.1.0",
      "eslint-config-prettier": "^6.0.0",
      "eslint-plugin-eslint-plugin": "^2.0.0",
      "eslint-plugin-node": "^8.0.0",
      "eslint-plugin-self": "^1.1.0",
      "mocha": "^6.0.0",
      "prettier": "^1.15.3",
      "vue-eslint-parser": "^6.0.0"
    },
    "engines": {
      "node": ">=6.0.0"
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/tel/.cache/yarn/v6/npm-eslint-plugin-prettier-3.1.4-168ab43154e2ea57db992a2cd097c828171f75c2-integrity/node_modules/eslint-plugin-prettier/package.json",
    "readmeFilename": "README.md",
    "readme": "# eslint-plugin-prettier [![Build Status](https://travis-ci.org/prettier/eslint-plugin-prettier.svg?branch=master)](https://travis-ci.org/prettier/eslint-plugin-prettier)\n\nRuns [Prettier](https://github.com/prettier/prettier) as an [ESLint](http://eslint.org) rule and reports differences as individual ESLint issues.\n\n## Sample\n\n```js\nerror: Insert `,` (prettier/prettier) at pkg/commons-atom/ActiveEditorRegistry.js:22:25:\n  20 | import {\n  21 |   observeActiveEditorsDebounced,\n> 22 |   editorChangesDebounced\n     |                         ^\n  23 | } from './debounced';;\n  24 |\n  25 | import {observableFromSubscribeFunction} from '../commons-node/event';\n\n\nerror: Delete `;` (prettier/prettier) at pkg/commons-atom/ActiveEditorRegistry.js:23:21:\n  21 |   observeActiveEditorsDebounced,\n  22 |   editorChangesDebounced\n> 23 | } from './debounced';;\n     |                     ^\n  24 |\n  25 | import {observableFromSubscribeFunction} from '../commons-node/event';\n  26 | import {cacheWhileSubscribed} from '../commons-node/observable';\n\n\n2 errors found.\n```\n\n> `./node_modules/.bin/eslint --format codeframe pkg/commons-atom/ActiveEditorRegistry.js` (code from [nuclide](https://github.com/facebook/nuclide)).\n\n## Installation\n\n```sh\nnpm install --save-dev eslint-plugin-prettier\nnpm install --save-dev --save-exact prettier\n```\n\n**_`eslint-plugin-prettier` does not install Prettier or ESLint for you._** _You must install these yourself._\n\nThen, in your `.eslintrc.json`:\n\n```json\n{\n  \"plugins\": [\"prettier\"],\n  \"rules\": {\n    \"prettier/prettier\": \"error\"\n  }\n}\n```\n\n## Recommended Configuration\n\nThis plugin works best if you disable all other ESLint rules relating to code formatting, and only enable rules that detect patterns in the AST. (If another active ESLint rule disagrees with `prettier` about how code should be formatted, it will be impossible to avoid lint errors.) You can use [eslint-config-prettier](https://github.com/prettier/eslint-config-prettier) to disable all formatting-related ESLint rules.\n\nIf your desired formatting does not match the `prettier` output, you should use a different tool such as [prettier-eslint](https://github.com/prettier/prettier-eslint) instead.\n\nTo integrate this plugin with `eslint-config-prettier`, you can use the `\"recommended\"` configuration:\n\n1. In addition to the above installation instructions, install `eslint-config-prettier`:\n\n   ```sh\n   npm install --save-dev eslint-config-prettier\n   ```\n\n2. Then you need to add `plugin:prettier/recommended` as the last extension in your `.eslintrc.json`:\n\n   ```json\n   {\n     \"extends\": [\"plugin:prettier/recommended\"]\n   }\n   ```\n\nThis does three things:\n\n- Enables `eslint-plugin-prettier`.\n- Sets the `prettier/prettier` rule to `\"error\"`.\n- Extends the `eslint-config-prettier` configuration.\n\nYou can then set Prettier's own options inside a `.prettierrc` file.\n\n3. In order to support special ESLint plugins (e.g. [eslint-plugin-react](https://github.com/yannickcr/eslint-plugin-react)), add extra exclusions for the plugins you use like so:\n\n```json\n{\n  \"extends\": [\n    \"plugin:prettier/recommended\",\n    \"prettier/flowtype\",\n    \"prettier/react\",\n    \"prettier/standard\"\n  ]\n}\n```\n\nFor the list of every available exclusion rule set, please see the [readme of eslint-config-prettier](https://github.com/prettier/eslint-config-prettier/blob/master/README.md).\n\n## Options\n\n> Note: While it is possible to pass options to Prettier via your ESLint configuration file, it is not recommended because editor extensions such as `prettier-atom` and `prettier-vscode` **will** read [`.prettierrc`](https://prettier.io/docs/en/configuration.html), but **won't** read settings from ESLint, which can lead to an inconsistent experience.\n\n- The first option:\n\n  - An object representing [options](https://prettier.io/docs/en/options.html) that will be passed into prettier. Example:\n\n    ```json\n    \"prettier/prettier\": [\"error\", {\"singleQuote\": true, \"parser\": \"flow\"}]\n    ```\n\n    NB: This option will merge and override any config set with `.prettierrc` files\n\n- The second option:\n\n  - An object with the following options\n\n    - `usePrettierrc`: Enables loading of the Prettier configuration file, (default: `true`). May be useful if you are using multiple tools that conflict with each other, or do not wish to mix your ESLint settings with your Prettier configuration.\n\n      ```json\n      \"prettier/prettier\": [\"error\", {}, {\n        \"usePrettierrc\": false\n      }]\n      ```\n\n    - `fileInfoOptions`: Options that are passed to [prettier.getFileInfo](https://prettier.io/docs/en/api.html#prettiergetfileinfofilepath-options) to decide whether a file needs to be formatted. Can be used for example to opt-out from ignoring files located in `node_modules` directories.\n\n      ```json\n      \"prettier/prettier\": [\"error\", {}, {\n        \"fileInfoOptions\": {\n          \"withNodeModules\": true\n        }\n      }]\n      ```\n\n- The rule is autofixable -- if you run `eslint` with the `--fix` flag, your code will be formatted according to `prettier` style.\n\n---\n\n## Contributing\n\nSee [CONTRIBUTING.md](https://github.com/prettier/eslint-plugin-prettier/blob/master/CONTRIBUTING.md)\n",
    "licenseText": "# The MIT License (MIT)\n\nCopyright © 2017 Andres Suarez and Teddy Katz\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the “Software”), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/eslint-plugin-prettier/-/eslint-plugin-prettier-3.1.4.tgz#168ab43154e2ea57db992a2cd097c828171f75c2",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/eslint-plugin-prettier/-/eslint-plugin-prettier-3.1.4.tgz",
    "hash": "168ab43154e2ea57db992a2cd097c828171f75c2",
    "integrity": "sha512-jZDa8z76klRqo+TdGDTFJSavwbnWK2ZpqGKNZ+VvweMW516pDUMmQ2koXvxEE4JhzNvTv+radye/bWGBmA6jmg==",
    "registry": "npm",
    "packageName": "eslint-plugin-prettier",
    "cacheIntegrity": "sha512-jZDa8z76klRqo+TdGDTFJSavwbnWK2ZpqGKNZ+VvweMW516pDUMmQ2koXvxEE4JhzNvTv+radye/bWGBmA6jmg== sha1-Foq0MVTi6lfbmSos0JfIKBcfdcI="
  },
  "registry": "npm",
  "hash": "168ab43154e2ea57db992a2cd097c828171f75c2"
}