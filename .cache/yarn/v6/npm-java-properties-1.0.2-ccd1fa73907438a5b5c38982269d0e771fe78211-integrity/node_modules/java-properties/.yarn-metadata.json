{
  "manifest": {
    "name": "java-properties",
    "description": "Reads and interpolates Java .properties files",
    "version": "1.0.2",
    "license": "MIT",
    "files": [
      "dist-*/",
      "bin/"
    ],
    "esnext": "dist-src/index.js",
    "main": "dist-node/index.js",
    "types": "dist-types/index.d.ts",
    "pika": true,
    "sideEffects": false,
    "keywords": [
      "java",
      "properties"
    ],
    "homepage": "http://github.com/mattdsteele/java-properties",
    "bugs": {
      "url": "https://github.com/mattdsteele/java-properties/issues"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/mattdsteele/java-properties.git"
    },
    "dependencies": {},
    "devDependencies": {
      "@pika/pack": "^0.3.7",
      "@pika/plugin-build-node": "^0.4.0",
      "@pika/plugin-build-types": "^0.4.0",
      "@pika/plugin-standard-pkg": "^0.4.0",
      "@pika/plugin-ts-standard-pkg": "^0.4.0",
      "@types/chai": "^4.1.7",
      "@types/mocha": "^5.2.7",
      "@types/node": "^11.13.17",
      "chai": "^4.2.0",
      "mocha": "^6.1.4",
      "ts-node": "^8.3.0",
      "typescript": "^3.5.3"
    },
    "engines": {
      "node": ">= 0.6.0"
    },
    "_registry": "npm",
    "_loc": "/home/tel/.cache/yarn/v6/npm-java-properties-1.0.2-ccd1fa73907438a5b5c38982269d0e771fe78211-integrity/node_modules/java-properties/package.json",
    "readmeFilename": "README.md",
    "readme": "# java-properties\n\n![travis](https://travis-ci.org/mattdsteele/java-properties.svg)\n\nRead Java .properties files. Supports adding dynamically some files and array key value (same key multiple times)\n\n## Getting Started\n\nInstall the module with: `npm install java-properties`\n\n## Documentation\n\n```javascript\n    var properties = require('java-properties');\n\n    // Reference a properties file\n    var values = properties.of('values.properties');\n\n    //Read a value from the properties file\n    values.get('a.key'); //returns value of a.key\n\n    //Add an additional file's properties\n    values.add('anotherfile.properties');\n\n    //Clear out all values\n    values.reset();\n    ...\n    // returns the value of a.key of 'defaultValue' if key is not found\n    values.get('a.key', 'defaultValue');\n    ...\n    // returns the value of the a.int.key as an int or 18\n    values.getInt('a.int.key', 18);\n    ...\n    // returns the value of the a.float.key as a float or 18.23\n    values.getFloat('a.float.key', 18.23);\n    ...\n    // returns the value of the a.bool.key as an boolean. Parse true or false with any case or 0 or 1\n    values.getBoolean('a.bool.key', true);\n    ...\n    // returns all the keys\n    values.getKeys();\n    ...\n    // adds another file the properties list\n    values.addFile('anotherFile.properties');\n    ...\n    // empty the keys previously loaded\n    values.reset();\n    ...\n    [ -- .properties file\n    an.array.key=value1\n    an.array.key=value2\n    ]\n    values.get('an.array.key'); // returns [value1, value2]\n\n    // Multiple contexts\n    var myFile = new PropertiesFile(\n        'example.properties',\n        'arrayExample.properties');\n    myFile.get('arrayKey');\n\n    var myOtherFile = new PropertiesFile();\n    myOtherFile.addFile('example.properties');\n    myOtherFile.addFile('example2.properties');\n```\n\n## Contributing\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code.\n\n## Release History\n\n- 0.1.0 Initial commit\n- 0.1.5 Support empty strings\n- 0.1.6 New API: `getKeys`\n- 0.1.7 New APIs: `addFile` and `reset`\n- 0.1.8 Add array key (the same key many time in files)\n- 0.2.0 Wrap features into a class to be able to have multiple running contexts\n- 0.2.1 Add default value to get method. Add getInt and getFloat to get an integer or float value\n- 0.2.2 Add getBoolean method to get a value as a boolean. Accepted values are true, TRUE, false, FALSE, 0, 1\n- 0.2.3 Add getMatchingKeys method\n- 0.2.4 Allow multi-line properties\n- 0.2.5 Refactorings, no new features\n- 0.2.6 FIX interpolation when a property is multivalued\n- 0.2.7 Get only last value for int and boolean in case of multivalued attribute\n- 0.2.8 FIX unicode \\uxxxx char decoding\n- 0.2.9 Allow multiple double quotation marks\n- 0.2.10 fix bug with escaped : & = (thanks @Drapegnik)\n- 1.0.0 Rewrite as Typescript. Support Node 6+ only\n\n## License\n\nLicensed under the MIT license.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/java-properties/-/java-properties-1.0.2.tgz#ccd1fa73907438a5b5c38982269d0e771fe78211",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/java-properties/-/java-properties-1.0.2.tgz",
    "hash": "ccd1fa73907438a5b5c38982269d0e771fe78211",
    "integrity": "sha512-qjdpeo2yKlYTH7nFdK0vbZWuTCesk4o63v5iVOlhMQPfuIZQfW/HI35SjfhA+4qpg36rnFSvUK5b1m+ckIblQQ==",
    "registry": "npm",
    "packageName": "java-properties",
    "cacheIntegrity": "sha512-qjdpeo2yKlYTH7nFdK0vbZWuTCesk4o63v5iVOlhMQPfuIZQfW/HI35SjfhA+4qpg36rnFSvUK5b1m+ckIblQQ== sha1-zNH6c5B0OKW1w4mCJp0Odx/nghE="
  },
  "registry": "npm",
  "hash": "ccd1fa73907438a5b5c38982269d0e771fe78211"
}