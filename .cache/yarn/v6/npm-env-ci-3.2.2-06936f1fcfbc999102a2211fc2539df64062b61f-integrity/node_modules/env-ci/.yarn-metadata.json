{
  "manifest": {
    "name": "env-ci",
    "description": "Get environment variables exposed by CI services",
    "version": "3.2.2",
    "author": {
      "name": "Pierre Vanduynslager",
      "url": "https://github.com/pvdlg"
    },
    "bugs": {
      "url": "https://github.com/pvdlg/github-parser/issues"
    },
    "dependencies": {
      "execa": "^1.0.0",
      "java-properties": "^1.0.0"
    },
    "devDependencies": {
      "ava": "^1.0.1",
      "codecov": "^3.0.0",
      "file-url": "^2.0.2",
      "nyc": "^13.1.0",
      "proxyquire": "^2.1.0",
      "semantic-release": "^15.0.0",
      "tempy": "^0.2.1",
      "xo": "^0.24.0"
    },
    "engines": {
      "node": ">=6"
    },
    "files": [
      "index.js",
      "lib",
      "services"
    ],
    "homepage": "https://github.com/pvdlg/env-ci#readme",
    "keywords": [
      "appveyor",
      "bamboo",
      "bitbucket",
      "bitrise",
      "buddy",
      "buildkite",
      "ci",
      "circle",
      "cirrus",
      "codebuild",
      "codefresh",
      "codeship",
      "drone",
      "environment",
      "git",
      "gitlab",
      "jenkins",
      "sail",
      "semaphore",
      "shippable",
      "teamcity",
      "travis",
      "variable",
      "vsts",
      "wercker"
    ],
    "license": "MIT",
    "main": "index.js",
    "nyc": {
      "include": [
        "index.js",
        "lib/**/*.js",
        "services/**/*.js"
      ],
      "reporter": [
        "json",
        "text",
        "html"
      ],
      "all": true
    },
    "prettier": {
      "printWidth": 120,
      "trailingComma": "es5"
    },
    "publishConfig": {
      "access": "public"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/pvdlg/env-ci.git"
    },
    "scripts": {
      "codecov": "codecov -f coverage/coverage-final.json",
      "lint": "xo",
      "semantic-release": "semantic-release",
      "test": "xo && nyc ava -v"
    },
    "xo": {
      "prettier": true
    },
    "_registry": "npm",
    "_loc": "/home/tel/.cache/yarn/v6/npm-env-ci-3.2.2-06936f1fcfbc999102a2211fc2539df64062b61f-integrity/node_modules/env-ci/package.json",
    "readmeFilename": "README.md",
    "readme": "# env-ci\n\nGet environment variables exposed by CI services.\n\n[![Travis](https://img.shields.io/travis/pvdlg/env-ci.svg)](https://travis-ci.org/pvdlg/env-ci)\n[![Codecov](https://img.shields.io/codecov/c/github/pvdlg/env-ci.svg)](https://codecov.io/gh/pvdlg/env-ci)\n[![Greenkeeper badge](https://badges.greenkeeper.io/pvdlg/env-ci.svg)](https://greenkeeper.io/)\n\nAdapted from [codecov-node](https://github.com/codecov/codecov-node/blob/master/lib/detect.js).\n\n## Install\n\n```bash\n$ npm install --save env-ci\n```\n\n## Usage\n\n```js\nconst envCi = require('env-ci');\n\nconst {name, service, isCi, branch, commit, tag, build, buildUrl, job, jobUrl, isPr, pr, prBranch, slug, root} = envCi();\n\nif (isCI) {\n  console.log(`Building repo ${slug} on ${name} service`);\n\n  if (isPr) {\n    console.log(`Building Pull Request #${pr} originating from branch ${prBranch} and targeting branch ${branch}`);\n  } else {\n    console.log(`Building branch ${branch}`);\n  }\n\n  if (service === 'travis') {\n    // Do something specific to Travis CI\n  }\n}\n```\n\n## Supported variables\n\n| Variable   | Description                                                                                            |\n|------------|--------------------------------------------------------------------------------------------------------|\n| `name`     | CI service Commercial name (e.g. `Travis CI`, `CircleCI`, `GitLab CI/CD`)                              |\n| `service`  | Standardized CI service name (e.g. `travis`, `circleci`, `gitlab`)                                     |\n| `isCi`     | `true` is running on a CI, `false` otherwise                                                           |\n| `branch`   | Git branch being built or targeted by a Pull Request                                                   |\n| `commit`   | Commit sha that triggered the CI build                                                                 |\n| `tag`      | Git tag that triggered the CI build                                                                    |\n| `build`    | CI service build number                                                                                |\n| `buildUrl` | Link to the CI service build                                                                           |\n| `job`      | CI service job number                                                                                  |\n| `jobUrl`   | Link to the CI service job                                                                             |\n| `isPr`     | `true` if the build has been triggered by a Pull Request, `false` otherwise                            |\n| `pr`       | Pull Request number (only for builds triggered by a Pull Request)                                      |\n| `prBranch` | Git branch branch from which the Pull Request originated (only for builds triggered by a Pull Request) |\n| `slug`     | The slug (in form: owner_name/repo_name) of the repository currently being built                       |\n| `root`     | The path to the directory where the repository is being built                                          |\n\n**Note**: Some variables can be detected only on certain CI services. See [Supported CI](#supported-ci).\n\n**Note**: The `pr` and `prBranch` properties are only available for builds triggered when a Pull Request is opened/updated and not on builds triggered by a push on a branch even if that branch happens to be the branch from which the Pull Request originated.\n\n## Supported CI\n\n| CI Service (`name`)                                                                                                                     |  `service`  |       `isCi`       |          `branch`           |      `commit`      |       `tag`        |      `build`       |     `buildUrl`     |       `job`        |      `jobUrl`      |        `isPr`         |         `pr`          |      `prBranch`       |       `slug`       |       `root`       |\n|-----------------------------------------------------------------------------------------------------------------------------------------|:-----------:|:------------------:|:---------------------------:|:------------------:|:------------------:|:------------------:|:------------------:|:------------------:|:------------------:|:---------------------:|:---------------------:|:---------------------:|:------------------:|:------------------:|\n| [AppVeyor]( https://www.appveyor.com/docs/environment-variables)                                                                        | `appveyor`  | :white_check_mark: |     :white_check_mark:      | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: |  :white_check_mark:   |  :white_check_mark:   |  :white_check_mark:   | :white_check_mark: | :white_check_mark: |\n| [Bamboo](https://confluence.atlassian.com/bamboo/bamboo-variables-289277087.html)                                                       |  `bamboo`   | :white_check_mark: |     :white_check_mark:      | :white_check_mark: |        :x:         | :white_check_mark: | :white_check_mark: | :white_check_mark: |        :x:         |          :x:          |          :x:          |          :x:          |        :x:         | :white_check_mark: |\n| [Bitbucket](https://confluence.atlassian.com/bitbucket/environment-variables-794502608.html)                                            | `bitbucket` | :white_check_mark: |     :white_check_mark:      | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: |        :x:         |        :x:         |          :x:          |          :x:          |          :x:          | :white_check_mark: | :white_check_mark: |\n| [Bitrise](https://devcenter.bitrise.io/builds/available-environment-variables/#exposed-by-bitriseio)                                    |  `bitrise`  | :white_check_mark: |     :white_check_mark:      | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: |        :x:         |        :x:         |  :white_check_mark:   |  :white_check_mark:   |  :white_check_mark:   | :white_check_mark: |        :x:         |\n| [Buddy](https://buddy.works/knowledge/deployments/how-use-environment-variables#default-environment-variables)                          |   `buddy`   | :white_check_mark: |     [:warning:](#buddy)     | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: |        :x:         |        :x:         |  :white_check_mark:   |  :white_check_mark:   |          :x:          | :white_check_mark: |        :x:         |\n| [Buildkite](https://buildkite.com/docs/builds/environment-variables)                                                                    | `buildkite` | :white_check_mark: |     :white_check_mark:      | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: |        :x:         |        :x:         |  :white_check_mark:   |  :white_check_mark:   |  :white_check_mark:   | :white_check_mark: | :white_check_mark: |\n| [CircleCI](https://circleci.com/docs/2.0/env-vars/#built-in-environment-variables)                                                      | `circleci`  | :white_check_mark: |   [:warning:](#circleci)    | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: |        :x:         |  :white_check_mark:   |  :white_check_mark:   |  :white_check_mark:   | :white_check_mark: |        :x:         |\n| [Cirrus CI](https://cirrus-ci.org/guide/writing-tasks/#environment-variables)                                                           |  `cirrus`   | :white_check_mark: |     :white_check_mark:      | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: |  :white_check_mark:   |  :white_check_mark:   |  :white_check_mark:   | :white_check_mark: | :white_check_mark: |\n| [AWS CodeBuild](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-env-vars.html)                                     | `codebuild` | :white_check_mark: | [:warning:](#aws-codebuild) | :white_check_mark: |        :x:         | :white_check_mark: | :white_check_mark: |        :x:         |        :x:         |          :x:          |          :x:          |          :x:          |        :x:         | :white_check_mark: |\n| [Codefresh](https://codefresh.io/docs/docs/codefresh-yaml/variables#system-provided-variables)                                          | `codefresh` | :white_check_mark: |     :white_check_mark:      | :white_check_mark: |        :x:         | :white_check_mark: | :white_check_mark: |        :x:         |        :x:         |  :white_check_mark:   |  :white_check_mark:   |  :white_check_mark:   | :white_check_mark: | :white_check_mark: |\n| [Codeship](https://documentation.codeship.com/basic/builds-and-configuration/set-environment-variables/#default-environment-variables)  | `codeship`  | :white_check_mark: |     :white_check_mark:      | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: |        :x:         |        :x:         |          :x:          |          :x:          |          :x:          | :white_check_mark: |        :x:         |\n| [Drone](https://readme.drone.io/reference/environ/)                                                                                     |   `drone`   | :white_check_mark: |     :white_check_mark:      | :white_check_mark: | :white_check_mark: | :white_check_mark: |        :x:         | :white_check_mark: |        :x:         |  :white_check_mark:   |  :white_check_mark:   |  :white_check_mark:   | :white_check_mark: |        :x:         |\n| [GitHub Actions](https://developer.github.com/actions/creating-github-actions/accessing-the-runtime-environment/#environment-variables) |  `github`   | :white_check_mark: |     :white_check_mark:      | :white_check_mark: |        :x:         |        :x:         |        :x:         |        :x:         |        :x:         |  :white_check_mark:   |  :white_check_mark:   |  :white_check_mark:   | :white_check_mark: | :white_check_mark: |\n| [GitLab CI/CD](https://docs.gitlab.com/ce/ci/variables/README.html)                                                                     |  `gitlab`   | :white_check_mark: |     :white_check_mark:      | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: |          :x:          |          :x:          |          :x:          | :white_check_mark: | :white_check_mark: |\n| [Jenkins](https://wiki.jenkins.io/display/JENKINS/Building+a+software+project)                                                          |  `jenkins`  | :white_check_mark: |    [:warning:](#jenkins)    | :white_check_mark: |        :x:         | :white_check_mark: | :white_check_mark: |        :x:         |        :x:         | [:warning:](#jenkins) | [:warning:](#jenkins) | [:warning:](#jenkins) | :white_check_mark: | :white_check_mark: |\n| [Sail CI](https://sail.ci/docs/environment-variables)                                                                                   |   `sail`    | :white_check_mark: |     [:warning:](#sail)      | :white_check_mark: |        :x:         |        :x:         |        :x:         |        :x:         |        :x:         |  :white_check_mark:   |  :white_check_mark:   |          :x:          | :white_check_mark: | :white_check_mark: |\n| [Semaphore](https://semaphoreci.com/docs/available-environment-variables.html)                                                          | `semaphore` | :white_check_mark: |   [:warning:](#semaphore)   | :white_check_mark: |        :x:         | :white_check_mark: |        :x:         | :white_check_mark: |        :x:         |  :white_check_mark:   |  :white_check_mark:   |  :white_check_mark:   | :white_check_mark: | :white_check_mark: |\n| [Shippable](http://docs.shippable.com/ci/env-vars/#stdEnv)                                                                              | `shippable` | :white_check_mark: |     :white_check_mark:      | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: |        :x:         |  :white_check_mark:   |  :white_check_mark:   |  :white_check_mark:   | :white_check_mark: | :white_check_mark: |\n| [TeamCity](https://confluence.jetbrains.com/display/TCD10/Predefined+Build+Parameters)                                                  | `teamcity`  | :white_check_mark: |     :white_check_mark:      | :white_check_mark: |        :x:         | :white_check_mark: |        :x:         |        :x:         |        :x:         |          :x:          |          :x:          |          :x:          | :white_check_mark: | :white_check_mark: |\n| [Travis CI](https://docs.travis-ci.com/user/environment-variables#default-environment-variables)                                        |  `travis`   | :white_check_mark: |     :white_check_mark:      | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: |  :white_check_mark:   |  :white_check_mark:   |  :white_check_mark:   | :white_check_mark: | :white_check_mark: |\n| [Visual Studio Team Services](https://docs.microsoft.com/en-us/vsts/pipelines/build/variables)                                          |   `vsts`    | :white_check_mark: |     :white_check_mark:      | :white_check_mark: |        :x:         | :white_check_mark: |        :x:         |        :x:         |        :x:         |  :white_check_mark:   |  :white_check_mark:   |  :white_check_mark:   |        :x:         | :white_check_mark: |\n| [Wercker](http://devcenter.wercker.com/docs/environment-variables/available-env-vars#hs_cos_wrapper_name)                               |  `wercker`  | :white_check_mark: |     :white_check_mark:      | :white_check_mark: |        :x:         | :white_check_mark: | :white_check_mark: |        :x:         |        :x:         |          :x:          |          :x:          |          :x:          | :white_check_mark: | :white_check_mark: |\n\n:warning: See [Caveats](#caveats)\n\n**Note**: Unsupported properties will always be `undefined`. For example if a Ci services doesn't support triggering builds when a Pull Request is opened/updated, `isPr` will be `undefined`.\n\n**Note**: If none of the above CI services is detected, `commit` and `branch` are determined based on the local Git repository, and `isCi` is determined based on the `CI` environment variable.\n\n## API\n\n### envCi(options) => Result\n\n#### options\n\nType: `Object`\n\n#### env\n\nType: `Object`<br>\nDefault: `process.env`\n\nThe object to read environment variables from.\n\n#### cwd\n\nType: `String`<br>\nDefault: `process.cwd()`\n\nThe current working directory in which to execute `git` commands used to determine the `commit` and `branch` [Result](#result) properties in case no [supported CI](#supported-ci) is detected.\n\n### Result\n\nType: `Object`\n\n[Environment variables values](#supported-variables) exposed by the CI service.\n\n## Caveats\n\n### AWS CodeBuild\n\nAWS CodeBuild doesn't provide an environment variable to determine the current Git branch being built. In addition, it clones the repository in a [detached head state](https://git-scm.com/docs/git-checkout#_detached_head) so the branch cannot be determined with `git rev-parse --abbrev-ref HEAD`.\nTo work around this limitation, `env-ci` look for the remote branches having the same `HEAD` as the local detached `HEAD` to determine the branch from which the detached `HEAD` was created.\nIn the rare case where there is multiple remote branches with the same `HEAD` as the local detached `HEAD`, `env-ci` will arbitrarily pick the first one. This can lead to an inaccurate `branch` value in such circumstances.\n\n### Buddy\n\nFor builds triggered when [a Pull Request is opened/updated](https://buddy.works/knowledge/deployments/pull-requests), Buddy doesn't provide an environment variable indicating the branch from which the Pull Request originated nor the target branch. It also build from a branch named `pull/<PR number>` so the target branch cannot be determined with a `git` command.\nTherefore in the case of Pull Request builds, `env-ci` will not be able to determine the `branch` and `prBranch` properties.\n\nSee [feature request](https://forum.buddy.works/t/determine-pull-request-branch-with-environment-variable/911).\n\n### CircleCI\n\nFor builds triggered when a Pull Request is opened/updated, CircleCI doesn't provide an environment variable indicating the target branch.\nTherefore in the case of Pull Request builds, `env-ci` will not be able to determine the `branch` property. However `prBranch` will be set.\n\nSee [feature request](https://discuss.circleci.com/t/create-a-circle-target-branch-envar/10022).\n\n## Jenkins\n\nTriggering build when a Pull Request is opened/updated is supported only via the [ghprb-plugin](https://github.com/jenkinsci/ghprb-plugin) and [gitlab-plugin](https://github.com/jenkinsci/gitlab-plugin). Therefore `env-ci` will set `isPr`, `pr` and `prBranch` and define `branch` with the Pull Request target branch only if one those plugin is used.\n\n## Sail\n\nFor builds triggered when a Pull Request is opened/updated, Sail doesn't provide an environment variable indicating the target branch, and the one for the current branch is set to `pull/<PR number>` independently of the the branch name from which the Pull Request originated.\nTherefore in the case of Pull Request builds, `env-ci` will not be able to determine the `branch` and `prBranch` properties.\n\n## Semaphore\n\nFor builds triggered when a Pull Request is opened/updated, Semaphore doesn't provide an environment variable indicating the target branch.\nTherefore in the case of Pull Request builds, `env-ci` will not be able to determine the `branch` property. However `prBranch` will be set.\n",
    "licenseText": "MIT License\n\nCopyright (c) 2017 Pierre Vanduynslager\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/env-ci/-/env-ci-3.2.2.tgz#06936f1fcfbc999102a2211fc2539df64062b61f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/env-ci/-/env-ci-3.2.2.tgz",
    "hash": "06936f1fcfbc999102a2211fc2539df64062b61f",
    "integrity": "sha512-AOiNZ3lmxrtva3r/roqaYDF+1PX2V+ouUzuGqJf7KNxyyYkuU+CsfFbbUeibQPdixxjI/lP6eDtvtkX1/wymJw==",
    "registry": "npm",
    "packageName": "env-ci",
    "cacheIntegrity": "sha512-AOiNZ3lmxrtva3r/roqaYDF+1PX2V+ouUzuGqJf7KNxyyYkuU+CsfFbbUeibQPdixxjI/lP6eDtvtkX1/wymJw== sha1-BpNvH8+8mZECoiEfwlOd9kBith8="
  },
  "registry": "npm",
  "hash": "06936f1fcfbc999102a2211fc2539df64062b61f"
}