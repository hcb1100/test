{
  "manifest": {
    "name": "extract-files",
    "version": "5.0.1",
    "description": "Clones a value, recursively extracting File, Blob and ReactNativeFile instances with their object paths, replacing them with null. FileList instances are treated as File instance arrays.",
    "license": "MIT",
    "author": {
      "name": "Jayden Seric",
      "email": "me@jaydenseric.com",
      "url": "https://jaydenseric.com"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/jaydenseric/extract-files.git"
    },
    "homepage": "https://github.com/jaydenseric/extract-files#readme",
    "bugs": {
      "url": "https://github.com/jaydenseric/extract-files/issues"
    },
    "keywords": [
      "extract",
      "file",
      "files",
      "File",
      "FileList",
      "Blob",
      "react",
      "native",
      "esm",
      "mjs"
    ],
    "files": [
      "lib",
      "!lib/test.*"
    ],
    "main": "lib",
    "sideEffects": false,
    "engines": {
      "node": ">=6"
    },
    "browserslist": "> 0.5%, not dead, node 6",
    "devDependencies": {
      "@babel/cli": "^7.2.3",
      "@babel/core": "^7.2.2",
      "@babel/plugin-proposal-class-properties": "^7.2.3",
      "@babel/preset-env": "^7.2.3",
      "babel-eslint": "^10.0.1",
      "eslint": "^5.12.1",
      "eslint-config-env": "^2.0.0",
      "eslint-config-prettier": "^3.6.0",
      "eslint-plugin-import": "^2.14.0",
      "eslint-plugin-import-order-alphabetical": "0.0.1",
      "eslint-plugin-node": "^8.0.1",
      "eslint-plugin-prettier": "^3.0.1",
      "husky": "^1.3.1",
      "if-ver": "^1.0.6",
      "jsdoc-md": "^1.7.0",
      "lint-staged": "^8.1.0",
      "prettier": "^1.16.0",
      "size-limit": "^0.21.1",
      "tap": "^12.1.1"
    },
    "scripts": {
      "prepare": "npm run prepare:clean && npm run prepare:mjs && npm run prepare:js && npm run prepare:jsdoc && npm run prepare:prettier",
      "prepare:clean": "rm -rf lib",
      "prepare:mjs": "BABEL_ESM=1 babel src -d lib --keep-file-extension",
      "prepare:js": "babel src -d lib",
      "prepare:jsdoc": "jsdoc-md",
      "prepare:prettier": "prettier 'lib/**/*.{mjs,js}' readme.md --write",
      "test": "npm run test:eslint && npm run test:prettier && npm run test:size && npm run test:mjs && npm run test:js",
      "test:eslint": "eslint . --ext mjs,js",
      "test:prettier": "prettier '**/*.{json,yml,md}' -l",
      "test:size": "size-limit",
      "test:mjs": "if-ver -ge 8.5 || exit 0; node --experimental-modules --no-warnings lib/test | tap-mocha-reporter spec",
      "test:js": "node lib/test | tap-mocha-reporter spec",
      "prepublishOnly": "npm run prepare && npm test"
    },
    "husky": {
      "hooks": {
        "pre-commit": "lint-staged"
      }
    },
    "lint-staged": {
      "*.{mjs,js}": "eslint",
      "*.{json,yml,md}": "prettier -l"
    },
    "eslintIgnore": [
      "lib"
    ],
    "eslintConfig": {
      "extends": [
        "env"
      ]
    },
    "prettier": {
      "proseWrap": "never",
      "singleQuote": true,
      "semi": false
    },
    "size-limit": [
      {
        "name": "ESM",
        "path": "lib/index.mjs",
        "limit": "500 B"
      },
      {
        "name": "CJS",
        "path": "lib/index.js",
        "limit": "500 B"
      }
    ],
    "_registry": "npm",
    "_loc": "/home/tel/.cache/yarn/v6/npm-extract-files-5.0.1-c9492a8410be643e260a376f0151361993d5f659-integrity/node_modules/extract-files/package.json",
    "readmeFilename": "readme.md",
    "readme": "# extract-files\n\n[![npm version](https://badgen.net/npm/v/extract-files)](https://npm.im/extract-files) [![Build status](https://travis-ci.org/jaydenseric/extract-files.svg?branch=master)](https://travis-ci.org/jaydenseric/extract-files)\n\nClones a value, recursively extracting [`File`](https://developer.mozilla.org/docs/web/api/file), [`Blob`](https://developer.mozilla.org/docs/web/api/blob) and [`ReactNativeFile`](#class-reactnativefile) instances with their [object paths](#type-objectpath), replacing them with `null`. [`FileList`](https://developer.mozilla.org/docs/web/api/filelist) instances are treated as [`File`](https://developer.mozilla.org/docs/web/api/file) instance arrays.\n\nUsed by [GraphQL multipart request spec client implementations](https://github.com/jaydenseric/graphql-multipart-request-spec#implementations) such as [`graphql-react`](https://npm.im/graphql-react) and [`apollo-upload-client`](https://npm.im/apollo-upload-client).\n\n## Usage\n\nInstall with [npm](https://npmjs.com):\n\n```shell\nnpm install extract-files\n```\n\nSee the [`extractFiles`](#function-extractfiles) documentation to get started.\n\n## Support\n\n- Node.js v6+\n- Browsers [`> 0.5%, not dead`](https://browserl.ist/?q=%3E+0.5%25%2C+not+dead)\n- React Native\n\n## API\n\n### Table of contents\n\n- [class ReactNativeFile](#class-reactnativefile)\n  - [Examples](#examples)\n- [function extractFiles](#function-extractfiles)\n  - [Examples](#examples-1)\n- [type ExtractableFile](#type-extractablefile)\n- [type ExtractFilesResult](#type-extractfilesresult)\n- [type ObjectPath](#type-objectpath)\n  - [See](#see)\n  - [Examples](#examples-2)\n- [type ReactNativeFileSubstitute](#type-reactnativefilesubstitute)\n  - [See](#see-1)\n  - [Examples](#examples-3)\n\n### class ReactNativeFile\n\nUsed to mark a [React Native `File` substitute](#type-reactnativefilesubstitute) in an object tree for [`extractFiles`](#function-extractfiles). It’s too risky to assume all objects with `uri`, `type` and `name` properties are files to extract.\n\n| Parameter | Type                                                         | Description                                                                          |\n| :-------- | :----------------------------------------------------------- | :----------------------------------------------------------------------------------- |\n| `file`    | [ReactNativeFileSubstitute](#type-reactnativefilesubstitute) | A React Native [`File`](https://developer.mozilla.org/docs/web/api/file) substitute. |\n\n#### Examples\n\n_An extractable file in React Native._\n\n> ```js\n> import { ReactNativeFile } from 'extract-files'\n>\n> const file = new ReactNativeFile({\n>   uri: uriFromCameraRoll,\n>   name: 'a.jpg',\n>   type: 'image/jpeg'\n> })\n> ```\n\n### function extractFiles\n\nClones a value, recursively extracting [`File`](https://developer.mozilla.org/docs/web/api/file), [`Blob`](https://developer.mozilla.org/docs/web/api/blob) and [`ReactNativeFile`](#class-reactnativefile) instances with their [object paths](#type-objectpath), replacing them with `null`. [`FileList`](https://developer.mozilla.org/docs/web/api/filelist) instances are treated as [`File`](https://developer.mozilla.org/docs/web/api/file) instance arrays.\n\n| Parameter | Type                                   | Description                                             |\n| :-------- | :------------------------------------- | :------------------------------------------------------ |\n| `value`   | \\*                                     | Value (typically an object tree) to extract files from. |\n| `path`    | [ObjectPath](#type-objectpath)? = `''` | Prefix for object paths for extracted files.            |\n\n**Returns:** [ExtractFilesResult](#type-extractfilesresult) — Result.\n\n#### Examples\n\n_Extract files from an object._\n\n> For the following:\n>\n> ```js\n> import { extractFiles } from 'extract-files'\n>\n> const file1 = new File(['1'], '1.txt', { type: 'text/plain' })\n> const file2 = new File(['2'], '2.txt', { type: 'text/plain' })\n> const value = {\n>   a: file1,\n>   b: [file1, file2]\n> }\n>\n> const { clone, files } = extractFiles(value, 'prefix')\n> ```\n>\n> `value` remains the same.\n>\n> `clone` is:\n>\n> ```js\n> {\n>   a: null,\n>   b: [null, null]\n> }\n> ```\n>\n> `files` is a [`Map`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Map) instance containing:\n>\n> | Key     | Value                        |\n> | :------ | :--------------------------- |\n> | `file1` | `['prefix.a', 'prefix.b.0']` |\n> | `file2` | `['prefix.b.1']`             |\n\n### type ExtractableFile\n\nAn extractable file.\n\n**Type:** File | Blob | [ReactNativeFile](#class-reactnativefile)\n\n### type ExtractFilesResult\n\nWhat [`extractFiles`](#function-extractfiles) returns.\n\n**Type:** [Object](https://mdn.io/object)\n\n| Property | Type                                                                                                               | Description                                                                    |\n| :------- | :----------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------- |\n| `clone`  | \\*                                                                                                                 | Clone of the original input value with files recursively replaced with `null`. |\n| `files`  | Map&lt;[ExtractableFile](#type-extractablefile), [Array](https://mdn.io/array)&lt;[ObjectPath](#type-objectpath)>> | Extracted files and their locations within the original value.                 |\n\n### type ObjectPath\n\nString notation for the path to a node in an object tree.\n\n**Type:** [String](https://mdn.io/string)\n\n#### See\n\n- [`object-path` on npm](https://npm.im/object-path).\n\n#### Examples\n\n_Object path is property `a`, array index `0`, object property `b`._\n\n>     a.0.b\n\n### type ReactNativeFileSubstitute\n\nA React Native [`File`](https://developer.mozilla.org/docs/web/api/file) substitute for when using [`FormData`](https://developer.mozilla.org/docs/web/api/formdata).\n\n**Type:** [Object](https://mdn.io/object)\n\n| Property | Type                             | Description        |\n| :------- | :------------------------------- | :----------------- |\n| `uri`    | [String](https://mdn.io/string)  | Filesystem path.   |\n| `name`   | [String](https://mdn.io/string)? | File name.         |\n| `type`   | [String](https://mdn.io/string)? | File content type. |\n\n#### See\n\n- [React Native `FormData` polyfill source](https://github.com/facebook/react-native/blob/v0.45.1/Libraries/Network/FormData.js#L34).\n\n#### Examples\n\n_A camera roll file._\n\n> ```js\n> {\n>   uri: uriFromCameraRoll,\n>   name: 'a.jpg',\n>   type: 'image/jpeg'\n> }\n> ```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/extract-files/-/extract-files-5.0.1.tgz#c9492a8410be643e260a376f0151361993d5f659",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/extract-files/-/extract-files-5.0.1.tgz",
    "hash": "c9492a8410be643e260a376f0151361993d5f659",
    "integrity": "sha512-qRW6y9eKF0VbCyOoOEtFhzJ3uykAw8GKwQVXyAIqwocyEWW4m+v+evec34RwtUkkxxHh7NKBLJ6AnXM8W4dH5w==",
    "registry": "npm",
    "packageName": "extract-files",
    "cacheIntegrity": "sha512-qRW6y9eKF0VbCyOoOEtFhzJ3uykAw8GKwQVXyAIqwocyEWW4m+v+evec34RwtUkkxxHh7NKBLJ6AnXM8W4dH5w== sha1-yUkqhBC+ZD4mCjdvAVE2GZPV9lk="
  },
  "registry": "npm",
  "hash": "c9492a8410be643e260a376f0151361993d5f659"
}