{
  "manifest": {
    "name": "apollo-link-ws",
    "version": "1.0.20",
    "description": "WebSocket transport layer for GraphQL",
    "author": {
      "name": "Evans Hauser",
      "email": "evanshauser@gmail.com"
    },
    "contributors": [
      {
        "name": "James Baxley",
        "email": "james@meteor.com"
      },
      {
        "name": "Jonas Helfer",
        "email": "jonas@helfer.email"
      },
      {
        "name": "jon wong",
        "email": "j@jnwng.com"
      },
      {
        "name": "Sashko Stubailo",
        "email": "sashko@stubailo.com"
      }
    ],
    "license": "MIT",
    "main": "./lib/index.js",
    "module": "./lib/bundle.esm.js",
    "typings": "./lib/index.d.ts",
    "sideEffects": false,
    "repository": {
      "type": "git",
      "url": "git+https://github.com/apollographql/apollo-link.git"
    },
    "bugs": {
      "url": "https://github.com/apollographql/apollo-link/issues"
    },
    "homepage": "https://github.com/apollographql/apollo-link#readme",
    "scripts": {
      "build": "tsc && rollup -c",
      "clean": "rimraf lib/* && rimraf coverage/*",
      "coverage": "jest --coverage",
      "filesize": "../../scripts/minify",
      "lint": "tslint -c \"../../tslint.json\" -p tsconfig.json -c ../../tslint.json src/*.ts",
      "prebuild": "npm run clean",
      "prepare": "npm run build",
      "test": "npm run lint && jest",
      "watch": "tsc -w -p . & rollup -c -w"
    },
    "dependencies": {
      "apollo-link": "^1.2.14",
      "tslib": "^1.9.3"
    },
    "peerDependencies": {
      "subscriptions-transport-ws": "^0.9.0"
    },
    "devDependencies": {
      "@types/graphql": "14.2.3",
      "@types/jest": "24.9.0",
      "graphql": "15.0.0",
      "graphql-tag": "2.10.1",
      "jest": "24.9.0",
      "rimraf": "2.7.1",
      "rollup": "1.29.1",
      "subscriptions-transport-ws": "0.9.16",
      "ts-jest": "22.4.6",
      "tslint": "5.20.1",
      "typescript": "3.0.3"
    },
    "jest": {
      "transform": {
        ".(ts|tsx)": "ts-jest"
      },
      "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
      "moduleFileExtensions": [
        "ts",
        "tsx",
        "js",
        "json"
      ],
      "testURL": "http://localhost"
    },
    "gitHead": "1012934b4fd9ab436c4fdcd5e9b1bb1e4c1b0d98",
    "_registry": "npm",
    "_loc": "/home/tel/.cache/yarn/v6/npm-apollo-link-ws-1.0.20-dfad44121f8445c6d7b7f8101a1b24813ba008ed-integrity/node_modules/apollo-link-ws/package.json",
    "readmeFilename": "README.md",
    "readme": "---\ntitle: apollo-link-ws\ndescription: Send GraphQL operations over a WebSocket. Works with GraphQL Subscriptions.\n---\n\nThis link is particularly useful to use GraphQL Subscriptions, but it will also allow you to send GraphQL queries and mutations over WebSockets as well.\n\n```js\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { SubscriptionClient } from \"subscriptions-transport-ws\";\n\nconst GRAPHQL_ENDPOINT = \"ws://localhost:3000/graphql\";\n\nconst client = new SubscriptionClient(GRAPHQL_ENDPOINT, {\n  reconnect: true\n});\n\nconst link = new WebSocketLink(client);\n```\n\n## Options\n\nWS Link takes either a subscription client or an object with three options on it to customize the behavior of the link. Takes the following possible keys in the configuration object:\n\n* `uri`: a string endpoint to connect to\n* `options`: a set of options to pass to a new Subscription Client\n* `webSocketImpl`: a custom WebSocket implementation\n\nBy default, this link uses the [subscriptions-transport-ws](https://github.com/apollographql/subscriptions-transport-ws) library for the transport.\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 - 2017 Meteor Development Group, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/apollo-link-ws/-/apollo-link-ws-1.0.20.tgz#dfad44121f8445c6d7b7f8101a1b24813ba008ed",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/apollo-link-ws/-/apollo-link-ws-1.0.20.tgz",
    "hash": "dfad44121f8445c6d7b7f8101a1b24813ba008ed",
    "integrity": "sha512-mjSFPlQxmoLArpHBeUb2Xj+2HDYeTaJqFGOqQ+I8NVJxgL9lJe84PDWcPah/yMLv3rB7QgBDSuZ0xoRFBPlySw==",
    "registry": "npm",
    "packageName": "apollo-link-ws",
    "cacheIntegrity": "sha512-mjSFPlQxmoLArpHBeUb2Xj+2HDYeTaJqFGOqQ+I8NVJxgL9lJe84PDWcPah/yMLv3rB7QgBDSuZ0xoRFBPlySw== sha1-361EEh+ERcbXt/gQGhskgTugCO0="
  },
  "registry": "npm",
  "hash": "dfad44121f8445c6d7b7f8101a1b24813ba008ed"
}