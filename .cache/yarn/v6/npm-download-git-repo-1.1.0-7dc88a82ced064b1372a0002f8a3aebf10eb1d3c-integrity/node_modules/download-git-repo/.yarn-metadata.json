{
  "manifest": {
    "name": "download-git-repo",
    "version": "1.1.0",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "git://github.com/flipxfx/download-git-repo"
    },
    "description": "Download and extract a git repository (GitHub, GitLab, Bitbucket) from node.",
    "keywords": [
      "download",
      "github",
      "bitbucket",
      "repo",
      "repository",
      "tar",
      "extract",
      "tarball"
    ],
    "dependencies": {
      "download": "^5.0.3",
      "git-clone": "^0.1.0",
      "rimraf": "^2.6.1"
    },
    "devDependencies": {
      "mocha": "^3.2.0",
      "fs-readdir-recursive": "1.0.0"
    },
    "scripts": {
      "test": "mocha"
    },
    "_registry": "npm",
    "_loc": "/home/tel/.cache/yarn/v6/npm-download-git-repo-1.1.0-7dc88a82ced064b1372a0002f8a3aebf10eb1d3c-integrity/node_modules/download-git-repo/package.json",
    "readmeFilename": "README.md",
    "readme": "# download-git-repo\n\nDownload and extract a git repository (GitHub, GitLab, Bitbucket) from node.\n\n## Installation\n\n    $ npm install download-git-repo\n\n## API\n\n### download(repository, destination, options, callback)\n\nDownload a git `repository` to a `destination` folder with `options`, and `callback`.\n\n#### repository\nThe shorthand repository string to download the repository from:\n\n- **GitHub** - `github:owner/name` or simply `owner/name`\n- **GitLab** - `gitlab:owner/name`\n- **Bitbucket** - `bitbucket:owner/name`\n\nThe `repository` parameter defaults to the `master` branch, but you can specify a branch or tag as a URL fragment like `owner/name#my-branch`.\nIn addition to specifying the type of where to download, you can also specify a custom origin like `gitlab:custom.com:owner/name`.\nCustom origin will default to `https` or `git@` for http and clone downloads respectively, unless protocol is specified.\nFeel free to submit an issue or pull request for additional origin options.\n\nIn addition to having the shorthand for supported git hosts, you can also hit a repository directly with:\n\n- **Direct** - `direct:url`\n\nThis will bypass the shorthand normalizer and pass `url` directly.\nIf using `direct` without clone, you must pass the full url to the zip file, including paths to branches if needed.\nIf using `direct` with clone, you must pass the full url to the git repo and you can specify a branch like `direct:url#my-branch`.\n\n#### destination\nThe file path to download the repository to.\n\n#### options\nAn optional options object parameter with download options. Options include:\n\n- `clone` - boolean default `false` - If true use `git clone` instead of an http download. While this can be a bit slower, it does allow private repositories to be used if the appropriate SSH keys are setup.\n\n#### callback\nThe callback function as `function (err)`.\n\n## Examples\n### Shorthand\nUsing http download from Github repository at master.\n```javascript\ndownload('flipxfx/download-git-repo-fixture', 'test/tmp', function (err) {\n  console.log(err ? 'Error' : 'Success')\n})\n```\n\nUsing git clone from Bitbucket repository at my-branch.\n```javascript\ndownload('bitbucket:flipxfx/download-git-repo-fixture#my-branch', 'test/tmp', { clone: true }, function (err) {\n  console.log(err ? 'Error' : 'Success')\n})\n```\n\nUsing http download from GitLab repository with custom origin.\n```javascript\ndownload('gitlab:mygitlab.com:flipxfx/download-git-repo-fixture#my-branch', 'test/tmp', function (err) {\n  console.log(err ? 'Error' : 'Success')\n})\n```\n\nUsing git clone from GitLab repository with custom origin and protocol.\nNote that the repository type (`github`, `gitlab` etc.) is not required if cloning from a custom origin.\n```javascript\ndownload('https://mygitlab.com:flipxfx/download-git-repo-fixture#my-branch', 'test/tmp', { clone: true }, function (err) {\n  console.log(err ? 'Error' : 'Success')\n})\n```\n\n### Direct\nUsing http download from direct url.\n```javascript\ndownload('direct:https://gitlab.com/flipxfx/download-git-repo-fixture/repository/archive.zip', 'test/tmp', function (err) {\n  console.log(err ? 'Error' : 'Success')\n})\n```\n\nUsing git clone from direct url at master.\n```javascript\ndownload('direct:https://gitlab.com/flipxfx/download-git-repo-fixture.git', 'test/tmp', { clone: true }, function (err) {\n  console.log(err ? 'Error' : 'Success')\n})\n```\n\nUsing git clone from direct url at my-branch.\n```javascript\ndownload('direct:https://gitlab.com/flipxfx/download-git-repo-fixture.git#my-branch', 'test/tmp', { clone: true }, function (err) {\n  console.log(err ? 'Error' : 'Success')\n})\n```\n\n## License\n\nMIT\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/download-git-repo/-/download-git-repo-1.1.0.tgz#7dc88a82ced064b1372a0002f8a3aebf10eb1d3c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/download-git-repo/-/download-git-repo-1.1.0.tgz",
    "hash": "7dc88a82ced064b1372a0002f8a3aebf10eb1d3c",
    "integrity": "sha512-yXcCvhkPKmq5M2cQXss6Qbig+LZnzRIT40XCYm/QCRnJaPG867StB1qnsBLxOGrPH1YEIRWW2gJq7LLMyw+NmA==",
    "registry": "npm",
    "packageName": "download-git-repo",
    "cacheIntegrity": "sha512-yXcCvhkPKmq5M2cQXss6Qbig+LZnzRIT40XCYm/QCRnJaPG867StB1qnsBLxOGrPH1YEIRWW2gJq7LLMyw+NmA== sha1-fciKgs7QZLE3KgAC+KOuvxDrHTw="
  },
  "registry": "npm",
  "hash": "7dc88a82ced064b1372a0002f8a3aebf10eb1d3c"
}