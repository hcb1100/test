{
  "manifest": {
    "name": "apollo-link",
    "version": "1.2.14",
    "description": "Flexible, lightweight transport layer for GraphQL",
    "author": {
      "name": "Evans Hauser",
      "email": "evanshauser@gmail.com"
    },
    "contributors": [
      {
        "name": "James Baxley",
        "email": "james@meteor.com"
      },
      {
        "name": "Jonas Helfer",
        "email": "jonas@helfer.email"
      },
      {
        "name": "jon wong",
        "email": "j@jnwng.com"
      },
      {
        "name": "Sashko Stubailo",
        "email": "sashko@stubailo.com"
      }
    ],
    "license": "MIT",
    "main": "./lib/index.js",
    "module": "./lib/bundle.esm.js",
    "typings": "./lib/index.d.ts",
    "sideEffects": false,
    "repository": {
      "type": "git",
      "url": "git+https://github.com/apollographql/apollo-link.git"
    },
    "bugs": {
      "url": "https://github.com/apollographql/apollo-link/issues"
    },
    "homepage": "https://github.com/apollographql/apollo-link#readme",
    "scripts": {
      "build": "tsc && rollup -c",
      "clean": "rimraf lib/* && rimraf coverage/*",
      "coverage": "jest --coverage",
      "filesize": "../../scripts/minify",
      "lint": "tslint -c \"../../tslint.json\" -p tsconfig.json -c ../../tslint.json src/*.ts",
      "prebuild": "npm run clean",
      "prepare": "npm run build",
      "test": "npm run lint && jest",
      "watch": "tsc -w -p . & rollup -c -w"
    },
    "dependencies": {
      "apollo-utilities": "^1.3.0",
      "ts-invariant": "^0.4.0",
      "tslib": "^1.9.3",
      "zen-observable-ts": "^0.8.21"
    },
    "peerDependencies": {
      "graphql": "^0.11.3 || ^0.12.3 || ^0.13.0 || ^14.0.0 || ^15.0.0"
    },
    "devDependencies": {
      "@types/graphql": "14.2.3",
      "@types/jest": "24.9.0",
      "@types/node": "9.6.55",
      "graphql": "15.0.0",
      "graphql-tag": "2.10.1",
      "jest": "24.9.0",
      "rimraf": "2.7.1",
      "rollup": "1.29.1",
      "ts-jest": "22.4.6",
      "tslint": "5.20.1",
      "typescript": "3.0.3"
    },
    "jest": {
      "transform": {
        ".(ts|tsx)": "ts-jest"
      },
      "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
      "moduleFileExtensions": [
        "ts",
        "tsx",
        "js",
        "json"
      ],
      "testURL": "http://localhost"
    },
    "gitHead": "1012934b4fd9ab436c4fdcd5e9b1bb1e4c1b0d98",
    "_registry": "npm",
    "_loc": "/home/tel/.cache/yarn/v6/npm-apollo-link-1.2.14-3feda4b47f9ebba7f4160bef8b977ba725b684d9-integrity/node_modules/apollo-link/package.json",
    "readmeFilename": "README.md",
    "readme": "# apollo-link\n\n## Purpose\n\n`apollo-link` is a standard interface for modifying control flow of GraphQL requests and fetching GraphQL results, designed to provide a simple GraphQL client that is capable of extensions.\nThe targeted use cases of `apollo-link` are highlighted below:\n\n* fetch queries directly without normalized cache\n* network interface for Apollo Client\n* network interface for Relay Modern\n* fetcher for\n\nApollo Link is the interface for creating new links in your application.\n\nThe client sends a request as a method call to a link and can recieve one or more (in the case of subscriptions) responses from the server. The responses are returned using the Observer pattern.\n\n![Apollo Link Chain](https://cdn-images-1.medium.com/max/1600/1*62VLGUaU-9ULCoBCGvgdkQ.png)\n\nResults from the server can be provided by calling `next(result)` on the observer. In the case of a network/transport error (not a GraphQL Error) the `error(err)` method can be used to indicate a response will not be recieved. If multiple responses are not supported by the link, `complete()` should be called to inform the client no further data will be provided.\n\nIn the case of an intermediate link, a second argument to `request(operation, forward)` is the link to `forward(operation)` to. `forward` returns an observable and it can be returned directly or subscribed to.\n\n```js\nforward(operation).subscribe({\n  next: result => {\n    handleTheResult(result)\n  },\n  error: error => {\n    handleTheNetworkError(error)\n  },\n});\n```\n\n## Implementing a basic custom transport\n\n```js\nimport { ApolloLink, Observable } from 'apollo-link';\n\nexport class CustomApolloLink extends ApolloLink {\n  request(operation /*, forward*/) {\n    //Whether no one is listening anymore\n    let unsubscribed = false;\n\n    return new Observable(observer => {\n      somehowGetOperationToServer(operation, (error, result) => {\n        if (unsubscribed) return;\n        if (error) {\n          //Network error\n          observer.error(error);\n        } else {\n          observer.next(result);\n          observer.complete(); //If subscriptions not supported\n        }\n      });\n\n      function unsubscribe() {\n        unsubscribed = true;\n      }\n\n      return unsubscribe;\n    });\n  }\n}\n```\n\n## Installation\n\n`npm install apollo-link --save`\n\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 - 2017 Meteor Development Group, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/apollo-link/-/apollo-link-1.2.14.tgz#3feda4b47f9ebba7f4160bef8b977ba725b684d9",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/apollo-link/-/apollo-link-1.2.14.tgz",
    "hash": "3feda4b47f9ebba7f4160bef8b977ba725b684d9",
    "integrity": "sha512-p67CMEFP7kOG1JZ0ZkYZwRDa369w5PIjtMjvrQd/HnIV8FRsHRqLqK+oAZQnFa1DDdZtOtHTi+aMIW6EatC2jg==",
    "registry": "npm",
    "packageName": "apollo-link",
    "cacheIntegrity": "sha512-p67CMEFP7kOG1JZ0ZkYZwRDa369w5PIjtMjvrQd/HnIV8FRsHRqLqK+oAZQnFa1DDdZtOtHTi+aMIW6EatC2jg== sha1-P+2ktH+eu6f0Fgvvi5d7pyW2hNk="
  },
  "registry": "npm",
  "hash": "3feda4b47f9ebba7f4160bef8b977ba725b684d9"
}