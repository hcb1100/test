{
  "manifest": {
    "name": "git-parse",
    "version": "1.0.4",
    "description": "Turn a git repository into a javascript object.",
    "main": "dist",
    "scripts": {
      "test": "jest",
      "build": "node ./scripts/compile-src"
    },
    "author": {},
    "dependencies": {
      "byline": "5.0.0",
      "util.promisify": "1.0.1"
    },
    "license": "BSD-2-Clause",
    "contributors": [
      {
        "name": "Suzi Curran",
        "email": "sucurran@wayfair.com"
      },
      {
        "name": "Morgan Packard",
        "email": "mpackard@wayfair.com"
      },
      {
        "name": "Ezra Skolnik",
        "email": "eskolnik@wayfair.com"
      },
      {
        "name": "Sandy Suh",
        "email": "asuh@wayfair.com"
      }
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/wayfair/git-parse"
    },
    "devDependencies": {
      "@babel/cli": "^7.8.4",
      "@babel/plugin-proposal-class-properties": "^7.8.3",
      "@babel/plugin-proposal-object-rest-spread": "^7.8.3",
      "@babel/preset-env": "^7.8.7",
      "@babel/preset-flow": "^7.8.3",
      "babel-eslint": "10.1.0",
      "eslint": "6.8.0",
      "eslint-plugin-flowtype": "4.6.0",
      "eslint-plugin-import": "2.20.1",
      "flow-bin": "0.120.1",
      "flow-copy-source": "2.0.9",
      "inquirer": "7.1.0",
      "jest": "25.1.0",
      "lerna": "3.20.2",
      "lodash": "4.17.15",
      "minimist": "1.2.5",
      "nock": "12.0.3",
      "prettier": "1.19.1"
    },
    "files": [
      "dist"
    ],
    "keywords": [
      "git"
    ],
    "_registry": "npm",
    "_loc": "/home/tel/.cache/yarn/v6/npm-git-parse-1.0.4-d8687e3b5729c2c9ae8f7231eb03d8862d029966-integrity/node_modules/git-parse/package.json",
    "readmeFilename": "README.md",
    "readme": "\n# Git-Parse\n\n`git-parse` is a utility which generates an array of javascript objects representing the current branch of a local git repository's commit history.\n\n## Getting Started\n\n\n### Prerequisites\n```\nnodejs version 8 or higher\n```\n\n### Installation\n\n```\n  npm install --save git-parse\n```\n\n\n### Usage\n```\nconst { gitToJs } = require('git-parse');\n\nconst commitsPromise = gitToJs('path/to/repo/');\n\ncommitsPromise.then(commits => console.log(JSON.stringify(commits, null, 2)));\n\n```\n**Console Output:**\n```\n[\n  {\n     \"hash\":\"7cedc121ee163d859dfdb9911e627d4b5933cc6d\",\n     \"authorName\":\"mpackard@wayfair.com\",\n     \"authorEmail\":\"mpackard@wayfair.com\",\n     \"date\":\"Wed, 10 Jan 2018 16:44:52 -0500\",\n     \"message\":\"initial setup\",\n     \"filesAdded\":[\n        { \"path\":\"packages/raspberry-popsicle/index.js\" },\n        { \"path\":\"packages/raspberry-popsicle/package-lock.json\" },\n        { \"path\":\"packages/raspberry-popsicle/package.json\" }\n     ],\n     \"filesDeleted\":[ ],\n     \"filesModified\":[ ],\n     \"filesRenamed\":[ ]\n  },\n  {                                                                                    \n    \"hash\": \"226f032eb87ac1eb18b7212eeaf1356980a9ae03\",                                \n    \"authorName\": \"mpackard@wayfair.com\",                                              \n    \"authorEmail\": \"mpackard@wayfair.com\",                                             \n    \"date\": \"Wed, 10 Jan 2018 15:25:16 -0500\",                                         \n    \"message\": \"add README\",                                                           \n    \"filesAdded\": [                                                                    \n      { \"path\": \"README.md\" }                                                                                \n    ],                                                                                 \n    \"filesDeleted\": [],                                                                \n    \"filesModified\": [],                                                               \n    \"filesRenamed\": []                                                                 \n  }                                   \n]\n```\n\n## API\n\n### gitToJs(pathToRepo, [options])\n\nReturns a promise which resolves with a list of objects describing git commits on the current branch. `pathToRepo` is a string. `options` is an optional object with one property, `sinceCommit`, which is a commit hash. If `sinceCommit` is present, gitToJs will return logs for commits _after_ the commit specified.\n\n```\nconst { gitToJs } = require('git-parse');\n\nconst commitsPromise = gitToJs('path/to/repo/');\n\ncommitsPromise.then(commits => console.log(JSON.stringify(commits, null, 2)));\n```\n\n### checkOutCommit(pathToRepo, commitHash, [options])\n\nChecks a repository out to a given commit. `hash` is the commit hash. Options is an optional object with one property, `force`. `force` adds `--force` to the [underlying git checkout](https://git-scm.com/docs/git-checkout#git-checkout--f). Returns a promise.\n\n### gitPull(pathToRepo)\n\nRuns 'git pull' on the repository at the given path. Returns a promise.\n\n### gitDiff(pathToRepo, commitHash1, [commitHash2], [file])\n\nReturns a git diff given a path to the repo, a commit, an optional second commit, and an optional file path.\n\nReturns a promise resolving with the diff as a string.\n\n## License\n\nThis project is licensed under the BSD-2-Clause license.\n\n",
    "licenseText": "Copyright 2018 Wayfair\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/git-parse/-/git-parse-1.0.4.tgz#d8687e3b5729c2c9ae8f7231eb03d8862d029966",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/git-parse/-/git-parse-1.0.4.tgz",
    "hash": "d8687e3b5729c2c9ae8f7231eb03d8862d029966",
    "integrity": "sha512-NSC71SqG6jN0XYPbib8t/mgguVLddw+xvkkLv2EsCFvHfsZjO+ZqMcGoGHHMqfhZllCDDAkOwZESkZEmICj9ZA==",
    "registry": "npm",
    "packageName": "git-parse",
    "cacheIntegrity": "sha512-NSC71SqG6jN0XYPbib8t/mgguVLddw+xvkkLv2EsCFvHfsZjO+ZqMcGoGHHMqfhZllCDDAkOwZESkZEmICj9ZA== sha1-2Gh+O1cpwsmuj3Ix6wPYhi0CmWY="
  },
  "registry": "npm",
  "hash": "d8687e3b5729c2c9ae8f7231eb03d8862d029966"
}