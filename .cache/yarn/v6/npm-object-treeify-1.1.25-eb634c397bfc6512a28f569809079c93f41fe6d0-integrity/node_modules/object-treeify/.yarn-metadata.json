{
  "manifest": {
    "name": "object-treeify",
    "version": "1.1.25",
    "description": "Stringify Object as tree structure",
    "main": "lib/index.js",
    "scripts": {
      "clean": "rm -rf lib",
      "build": "npx babel src --out-dir lib --copy-files --include-dotfiles --config-file ./.babelrc",
      "build-clean": "yarn run clean && yarn run build",
      "test-simple": "nyc mocha \"./test/**/*.spec.js\"",
      "test": "yarn run clean && yarn run gardener && yarn run test-simple",
      "coveralls": "node ./node_modules/coveralls/bin/coveralls.js < ./coverage/lcov.info",
      "semantic-release": "yarn run build-clean && npx semantic-release",
      "gardener": "node gardener",
      "docker": "docker run --net host -u`id -u`:`id -g` -v $(pwd):/user/project -v ~/.aws:/user/.aws -v ~/.npmrc:/user/.npmrc -w /user/project -it --entrypoint /bin/bash",
      "t": "yarn test",
      "ts": "yarn run test-simple",
      "tsv": "yarn run test-simple --verbose",
      "u": "yarn upgrade --latest --force",
      "i": "yarn install --frozen-lockfile"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/blackflux/object-treeify.git"
    },
    "keywords": [
      "object",
      "tree",
      "print",
      "console",
      "pretty",
      "treeify",
      "stringify",
      "visualize",
      "convert",
      "string",
      "debug"
    ],
    "author": {
      "name": "Lukas Siemon"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/blackflux/object-treeify/issues"
    },
    "homepage": "https://github.com/blackflux/object-treeify#readme",
    "devDependencies": {
      "@babel/cli": "7.10.0",
      "@babel/core": "7.10.0",
      "@babel/plugin-proposal-object-rest-spread": "7.10.0",
      "@babel/register": "7.9.0",
      "@blackflux/eslint-plugin-rules": "1.3.27",
      "@blackflux/robo-config-plugin": "3.4.0",
      "babel-eslint": "10.1.0",
      "chai": "4.2.0",
      "coveralls": "3.1.0",
      "eslint": "7.1.0",
      "eslint-config-airbnb-base": "14.1.0",
      "eslint-plugin-import": "2.20.2",
      "eslint-plugin-json": "2.1.1",
      "eslint-plugin-markdown": "1.0.2",
      "eslint-plugin-mocha": "7.0.0",
      "js-gardener": "2.0.158",
      "nyc": "15.0.1",
      "semantic-release": "17.0.8"
    },
    "nyc": {
      "tempDir": "./coverage/.nyc_output",
      "report-dir": "./coverage",
      "check-coverage": true,
      "per-file": false,
      "lines": 100,
      "statements": 100,
      "functions": 100,
      "branches": 100,
      "include": [
        "**/*.js"
      ],
      "reporter": [
        "lcov",
        "text-summary"
      ],
      "require": [
        "@babel/register"
      ],
      "extension": [],
      "cache": true,
      "all": true,
      "babel": true,
      "exclude": [
        "gardener.js",
        "node_modules/*",
        "coverage/*",
        "lib/*"
      ]
    },
    "licenses": [
      {
        "type": "MIT",
        "url": "https://github.com/blackflux/object-treeify/blob/master/LICENSE"
      }
    ],
    "engines": {
      "node": ">= 10"
    },
    "files": [
      "lib"
    ],
    "dependencies": {},
    "_registry": "npm",
    "_loc": "/home/tel/.cache/yarn/v6/npm-object-treeify-1.1.25-eb634c397bfc6512a28f569809079c93f41fe6d0-integrity/node_modules/object-treeify/package.json",
    "readmeFilename": "README.md",
    "readme": "# object-treeify\n\n[![Build Status](https://circleci.com/gh/blackflux/object-treeify.png?style=shield)](https://circleci.com/gh/blackflux/object-treeify)\n[![Test Coverage](https://img.shields.io/coveralls/blackflux/object-treeify/master.svg)](https://coveralls.io/github/blackflux/object-treeify?branch=master)\n[![Dependabot Status](https://api.dependabot.com/badges/status?host=github&repo=blackflux/object-treeify)](https://dependabot.com)\n[![Dependencies](https://david-dm.org/blackflux/object-treeify/status.svg)](https://david-dm.org/blackflux/object-treeify)\n[![NPM](https://img.shields.io/npm/v/object-treeify.svg)](https://www.npmjs.com/package/object-treeify)\n[![Downloads](https://img.shields.io/npm/dt/object-treeify.svg)](https://www.npmjs.com/package/object-treeify)\n[![Semantic-Release](https://github.com/blackflux/js-gardener/blob/master/assets/icons/semver.svg)](https://github.com/semantic-release/semantic-release)\n[![Gardener](https://github.com/blackflux/js-gardener/blob/master/assets/badge.svg)](https://github.com/blackflux/js-gardener)\n\nStringify Object as tree structure\n\n```\n{\n    oranges: {\n        'mandarin': {                                          ├─ oranges\n            clementine: null,                                  │  └─ mandarin\n            tangerine: 'so cheap and juicy!'        -=>        │     ├─ clementine\n        }                                                      │     └─ tangerine: so cheap and juicy!\n    },                                                         └─ apples\n    apples: {                                                     ├─ gala\n        'gala': null,                                             └─ pink lady\n        'pink lady': null\n    }\n}\n```\n\nProject was inspired by [treeify](https://github.com/notatestuser/treeify) and works almost identical. However\nthe algorithm is much shorter and faster, works without recursion and is very memory efficient. Furthermore\nthe output can be sorted using a custom comparator function.\n\n## Install\n\n    $ npm install --save object-treeify\n\n## Usage\n\n<!-- eslint-disable import/no-unresolved,import/no-extraneous-dependencies -->\n```js\nconst treeify = require('object-treeify');\n\ntreeify({\n  oranges: {\n    mandarin: {\n      clementine: null,\n      tangerine: 'so cheap and juicy!'\n    }\n  },\n  apples: {\n    gala: null,\n    'pink lady': null\n  }\n}, {/* options */});\n\n// =>\n// ├─ oranges\n// │  └─ mandarin\n// │     ├─ clementine\n// │     └─ tangerine: so cheap and juicy!\n// └─ apples\n//    ├─ gala\n//    └─ pink lady\n```\n\n### Features\n\n- Allows for custom sorting\n- Very fast and memory efficient implementation\n- Input traversed exactly once\n- Dependency free and small in size\n- Tests to verify correctness\n\n## Options\n\n### joined\n\nType: `boolean`<br>\nDefault: `true`\n\nBy default a single string is returned. Can be set to `false` to instead return an array containing lines.\n\n#### spacerNoNeighbour\n\nType: `string`<br>\nDefault: `   `\n\nPrefix for depth level when no further neighbour is present.\n\n#### spacerNeighbour\n\nType: `string`<br>\nDefault: `│  `\n\nPrefix for depth level when a further neighbour is present.\n\n#### keyNoNeighbour\n\nType: `string`<br>\nDefault: `└─ `\n\nPrefix for key when no further neighbour is present.\n\n#### keyNeighbour\n\nType: `string`<br>\nDefault: `├─ `\n\nPrefix for key when a further neighbour is present.\n\n#### sortFn\n\nType: `function`<br>\nDefault: `null`\n\nFunction that defines the key sort order. Defaults to ordering of `Object.keys(...)`, which is typically insertion order.\n\n## Examples\n\nMore examples can be found in the tests.\n",
    "licenseText": "Copyright (c) 2019 Lukas Siemon\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/object-treeify/-/object-treeify-1.1.25.tgz#eb634c397bfc6512a28f569809079c93f41fe6d0",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/object-treeify/-/object-treeify-1.1.25.tgz",
    "hash": "eb634c397bfc6512a28f569809079c93f41fe6d0",
    "integrity": "sha512-6Abx0xlXDnYd50JkQefvoIly3jWOu8/PqH4lh8p2/aMFEx5TjsUGHt0H9NHfzt+pCwOhpPgNYofD8e2YywIXig==",
    "registry": "npm",
    "packageName": "object-treeify",
    "cacheIntegrity": "sha512-6Abx0xlXDnYd50JkQefvoIly3jWOu8/PqH4lh8p2/aMFEx5TjsUGHt0H9NHfzt+pCwOhpPgNYofD8e2YywIXig== sha1-62NMOXv8ZRKij1aYCQeck/Qf5tA="
  },
  "registry": "npm",
  "hash": "eb634c397bfc6512a28f569809079c93f41fe6d0"
}